import e,{useState as t,useMemo as o}from"react";import{useReactTable as r,getCoreRowModel as a,getPaginationRowModel as n,flexRender as l}from"@tanstack/react-table";import{FontAwesomeIcon as c}from"@fortawesome/react-fontawesome";import{faSort as m,faSortUp as s,faSortDown as i}from"@fortawesome/free-solid-svg-icons";import{resolveColumnAccessor as d}from"./ColumnAccessors.js";import u from"./PaginationControls.js";const g=({data:g,columns:p})=>{const[E,f]=t([]),C=o((()=>(p.forEach(((e,t,o)=>{o[t].accessorFn=d(e.id,e.accessorType)})),p)),[]),b=r({data:g,columns:C,state:{sorting:E},onSortingChange:f,getCoreRowModel:a(),getPaginationRowModel:n()});return e.createElement(e.Fragment,null,e.createElement("table",{className:"table-auto"},e.createElement("thead",null,b.getHeaderGroups().map((t=>e.createElement("tr",{key:t.id},t.headers.map((t=>{var o;return e.createElement("th",{key:t.id,colSpan:t.colSpan},t.isPlaceholder?null:e.createElement("div",Object.assign({},{className:t.column.getCanSort()?"cursor-pointer select-none":"",onClick:t.column.getToggleSortingHandler()}),l(t.column.columnDef.header,t.getContext()),null!==(o={sort:e.createElement(c,{icon:m}),asc:e.createElement(c,{icon:s}),desc:e.createElement(c,{icon:i})}[t.column.getIsSorted()])&&void 0!==o?o:null))})))))),e.createElement("tbody",null,b.getRowModel().rows.map((t=>e.createElement("tr",{key:t.id},t.getVisibleCells().map((t=>e.createElement("td",{key:t.id},e.createElement(e.Fragment,null,t.renderValue()))))))))),e.createElement(u,{table:b}))};export{g as default};
//# sourceMappingURL=Table.js.map
