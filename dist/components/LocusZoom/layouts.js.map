{"version":3,"file":"layouts.js","sources":["../../../src/components/LocusZoom/layouts.js"],"sourcesContent":["import LocusZoom from \"locuszoom\"\nimport config from \"./config\"\n\n// copied from https://github.com/statgen/locuszoom/blob/a271a0321339fb223721476244ece2fa7dec9820/esm/helpers/layouts.js#L106\n// fossilfriend: b/c I couldn't figure out how to import it from the node_modules!! ... even though it is there, so\n// TODO: fix this / import\nfunction deepCopy(item) {\n    // FIXME: initial attempt to replace this with a more efficient deep clone method caused merge() to break; revisit in future.\n    //   Replacing this with a proper clone would be the key blocker to allowing functions and non-JSON values (like infinity) in layout objects\n    return JSON.parse(JSON.stringify(item));\n}\n\n/**\n * A dropdown menu that can be used to control the LD population used with the LDServer Adapter.\n * Modified from https://github.com/statgen/locuszoom/blob/a271a0321339fb223721476244ece2fa7dec9820/esm/layouts/index.js#L558\n * @name ldlz2_pop_selector\n * @type toolbar_widgets\n */\nconst ldlz2_pop_selector_menu = {\n    type: \"set_state\",\n    tag: \"ld_population\",\n    position: \"right\",\n    color: \"blue\",\n    button_html: \"LD Population: \",\n    show_selected: true,\n    button_title: \"Select LD Population: \",\n    custom_event_name: \"widget_set_ldpop\",\n    state_field: \"ld_pop\",\n    options: config.populations,\n};\n\nexport const standard_association_toolbar = (function () {\n    // Suitable for association plots (adds a button for LD data)\n    const base = LocusZoom.Layouts.get(\"toolbar\", \"standard_association\");\n    for (const [index, widget] of base.widgets.entries()) {\n        if (widget.hasOwnProperty(\"tag\") && widget.tag == \"ld_population\") {\n            base.widgets[index].options = config.populations;\n        }\n    }\n    // base.widgets.push(deepCopy(ldlz2_pop_selector_menu));\n    return base;\n})();\n\nexport const standard_association_tooltip = {\n    closable: true,\n    show: { or: [\"highlighted\", \"selected\"] },\n    hide: { and: [\"unhighlighted\", \"unselected\"] },\n    html: `<a href=\"../../record/variant/{{assoc:variant|htmlescape}}\" target=\"_blank\" rel=\"noopener\">{{assoc:variant|htmlescape}}</a><br>\n        <em>p</em>-value: <strong>{{assoc:log_pvalue|logtoscinotation|htmlescape}}</strong><br>\n        {{#if lz_is_ld_refvar}}<strong>LD Reference Variant</strong>{{#else}}\n        <a href=\"javascript:void(0);\" \n        onclick=\"var data = this.parentNode.__data__;\n                 data.getDataLayer().makeLDReference(data);\"\n                 >Make LD Reference</a>{{/if}}<br>`,\n};\n\nexport const standard_genes_tooltip = {\n    closable: true,\n    show: { or: [\"highlighted\", \"selected\"] },\n    hide: { and: [\"unhighlighted\", \"unselected\"] },\n    html:\n        \"<h4><strong><i>{{gene_name|htmlescape}}</i></strong></h4><br>\" +\n        '<a href=\"../../record/gene/{{gene_id|htmlescape}}\" target=\"_blank\" rel=\"noopener\">{{gene_id|htmlescape}}</a><br>'\n};\n\nexport const _ldLegend = [\n    { label: \"LD (rÂ²)\", label_size: 14 },\n    {\n        shape: \"ribbon\",\n        orientation: \"vertical\",\n        width: 10,\n        height: 15,\n        color_stops: [\"#B8B8B8\", \"rgb(38, 188, 225)\", \"rgb(110, 254, 104)\", \"rgb(248, 195, 42)\", \"rgb(219, 61, 17)\"],\n        tick_labels: [0, 0.2, 0.4, 0.6, 0.8, 1.0],\n    },\n];\n\nexport const _ldColorScale = [\n    {\n        // Name of a function specified in `LocusZoom.ScaleFunctions`\n        scale_function: \"if\",\n        // The field whose value will be passed to the scale function\n        field: \"lz_is_ld_refvar\",\n        // Options that will be passed to the scale function; see documentation for available options\n        parameters: {\n            field_value: 1,\n            then: \"#9632b8\",\n        },\n    },\n    {\n        scale_function: \"numerical_bin\",\n        field: \"ld:correlation\",\n        parameters: {\n            breaks: [0, 0.2, 0.4, 0.6, 0.8],\n            values: [\"#B8B8B8\", \"#46b8da\", \"#5cb85c\", \"#eea236\", \"#d43f3a\"],\n        },\n    },\n    \"#B8B8B8\",\n];\n"],"names":["config","populations","standard_association_toolbar","base","LocusZoom","Layouts","get","index","widget","widgets","entries","hasOwnProperty","tag","options","standard_association_tooltip","closable","show","or","hide","and","html","standard_genes_tooltip","_ldLegend","label","label_size","shape","orientation","width","height","color_stops","tick_labels","_ldColorScale","scale_function","field","parameters","field_value","then","breaks","values"],"mappings":"oDA4BaA,EAAOC,YAGR,MAACC,EAA+B,WAExC,MAAMC,EAAOC,EAAUC,QAAQC,IAAI,UAAW,wBAC9C,IAAK,MAAOC,EAAOC,KAAWL,EAAKM,QAAQC,UACnCF,EAAOG,eAAe,QAAwB,iBAAdH,EAAOI,MACvCT,EAAKM,QAAQF,GAAOM,QAAUb,EAAOC,aAI7C,OAAOE,CACV,CAV2C,GAY/BW,EAA+B,CACxCC,UAAU,EACVC,KAAM,CAAEC,GAAI,CAAC,cAAe,aAC5BC,KAAM,CAAEC,IAAK,CAAC,gBAAiB,eAC/BC,KAAM,ogBASGC,EAAyB,CAClCN,UAAU,EACVC,KAAM,CAAEC,GAAI,CAAC,cAAe,aAC5BC,KAAM,CAAEC,IAAK,CAAC,gBAAiB,eAC/BC,KACI,iLAIKE,EAAY,CACrB,CAAEC,MAAO,UAAWC,WAAY,IAChC,CACIC,MAAO,SACPC,YAAa,WACbC,MAAO,GACPC,OAAQ,GACRC,YAAa,CAAC,UAAW,oBAAqB,qBAAsB,oBAAqB,oBACzFC,YAAa,CAAC,EAAG,GAAK,GAAK,GAAK,GAAK,KAIhCC,EAAgB,CACzB,CAEIC,eAAgB,KAEhBC,MAAO,kBAEPC,WAAY,CACRC,YAAa,EACbC,KAAM,YAGd,CACIJ,eAAgB,gBAChBC,MAAO,iBACPC,WAAY,CACRG,OAAQ,CAAC,EAAG,GAAK,GAAK,GAAK,IAC3BC,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,aAG7D"}