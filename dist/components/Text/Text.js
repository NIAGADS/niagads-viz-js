import e,{useState as t}from"react";import{isObject as r,isJSON as a}from"./utils.js";import{LinkList as l,Link as n}from"./Link.js";const i=({value:t})=>{const a=r(t)?t:JSON.parse(t),i=(e=>{if(Array.isArray(e)){if("url"in e[0])return"link_list";throw new Error(`ERROR: Invalid JSON passed to FormattedJSON (a TextRenderer) - unknown array type: ${JSON.stringify(e)}`)}if(!("value"in e))throw new Error(`ERROR: Invalid JSON passed to FormattedJSON (a TextRenderer) - missing 'value': ${JSON.stringify(e)}`);if("url"in e)return"link";if("tooltip"in e)return"tooltip";if("text"in e)return"legacy_plain_text";throw new Error(`ERROR: Invalid JSON passed to FormattedJSON (a TextRenderer) - unknown JSON Renderer type: ${JSON.stringify(e)}`)})(a);switch(i){case"tooltip":return e.createElement(m,{value:a});case"link":return e.createElement(n,{value:a});case"link_list":return e.createElement(l,{value:a});default:return e.createElement(o,{value:t.value})}},o=({value:t,maxLength:r=100})=>a(t)?e.createElement(i,{value:t}):t.toString().length>r?e.createElement(s,{value:t,maxLength:r}):t,s=({value:r,maxLength:l=100})=>{const[n,i]=t(!1),o=()=>{i(!n)};return a(r)&&"tooltip"in r?e.createElement(m,{value:{value:r.slice(0,l-3)+"...",tooltip:r.tooltip}}):n?e.createElement("div",null,r," ",e.createElement("a",{onClick:o},"Show less")):e.createElement("div",null,`${r.slice(0,l-3)}...`," ",e.createElement("a",{onClick:o},"Show more"))},u=({value:t,className:r,muiColor:a})=>e.createElement("span",{className:r||"",color:a||""},t),m=({value:t})=>e.createElement("div",{title:t.tooltip,"arial-label":t.tooltip},e.createElement("span",{className:"annotated-text"},t.value));export{m as AnnotatedText,s as Clob,u as ColoredText,o as DefaultText,i as FormattedJSON};
//# sourceMappingURL=Text.js.map
